worker_processes  auto;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections  1024;
}

http {
    error_log  /var/log/nginx/error.log debug;
    include       mime.types;

    upstream api {
        server django_app:8000;
    }
    server {
        listen       8080;
        listen [::]:8080;
        server_name  localhost;

        return 301 https://$host:8443$request_uri;
    }

    server {
        listen       8443 ssl;
        listen [::]:8443 ssl;
        server_name  localhost;

        ssl_certificate /etc/nginx/ssl/server.crt;
        ssl_certificate_key /etc/nginx/ssl/server.key;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers HIGH:!aNULL:!MD5;

        root /var/www/html;

        location / {
            try_files $uri $uri/ $uri.html /index.html;
        }

        location /api/ {
            proxy_pass http://api;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # add_header 'Access-Control-Allow-Origin' 'https://localhost:8443' always;
            # add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            # add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;

            # # En-têtes CORS
            # add_header 'Access-Control-Allow-Origin' 'https://localhost:8443' always;
            # add_header 'Access-Control-Allow-Origin' 'https://10.11.1.10:8443' always;
            # add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            # add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;

            # # Autoriser les requêtes OPTIONS pour CORS
            # if ($request_method = OPTIONS) {
            #     add_header 'Access-Control-Allow-Origin' 'https://localhost:8443';
            #     add_header 'Access-Control-Allow-Origin' 'https://10.11.1.10:8443';
            #     add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            #     add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';
            #     return 204;  # Réponse sans contenu
            # }
        }

        location /ws/ {
            proxy_pass http://api;
            proxy_http_version 1.1;      
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}